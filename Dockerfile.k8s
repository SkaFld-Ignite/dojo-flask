# Multi-stage build for Kubernetes deployment
FROM python:3.11-slim as base

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    ffmpeg \
    libmagic1 \
    libpq5 \
    && rm -rf /var/lib/apt/lists/*

# Create app user for security
RUN useradd --create-home --shell /bin/bash app

# Set working directory
WORKDIR /app

# Install Python dependencies
COPY backend/requirements-basic.txt backend/requirements-prod-basic.txt ./
RUN pip install --no-cache-dir -r requirements-basic.txt -r requirements-prod-basic.txt

# Copy application code
COPY backend/ ./backend/
COPY shared/ ./shared/

# Create necessary directories
RUN mkdir -p /app/storage/uploads /app/storage/processed /app/models /app/logs

# Set ownership
RUN chown -R app:app /app

# Switch to app user
USER app

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/api/health || exit 1

# Default command (can be overridden)
CMD ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "2", "--worker-class", "eventlet", "--timeout", "300", "--keep-alive", "2", "--max-requests", "1000", "--max-requests-jitter", "100", "backend.src:create_app()"] 